# mamaroku
using System;
namespace exe1
{
    class Program
    {
        public struct CAD_taxi
        {
            public int codigo;
            public string nome;
            public int NumTaxi;
            public double Kper;
            public double ValorReceber;
            
        };
        static void Main(string[] args)
        {
            int qtd = 0;
            CAD_taxi [] taxi = new CAD_taxi[20];
            Receber(taxi,ref qtd);
            ValorReceber(taxi,qtd);
            exibir(taxi,qtd);
            exibirMaior(taxi, qtd);

           
        }

        static void Receber(CAD_taxi [] taxi, ref int i ) 
        {
            bool a = true;
            char res;
            
            while (i < 20 && a == true)
            {
                Console.Write("Entre com o nome do {0}° taxista:  ", i + 1);
                taxi[i].nome = Console.ReadLine();
                Console.Write("Entre com o código do {0}° taxistas:  ", i + 1);
                taxi[i].codigo = int.Parse(Console.ReadLine());
                Console.Write("Entre com o Número do taxi do {0}° taxistas:  ", i + 1);
                taxi[i].NumTaxi = int.Parse(Console.ReadLine());
                Console.Write("Entre com o Kper do {0}° taxistas:  ", i + 1);
                taxi[i].Kper = double.Parse(Console.ReadLine());
                Console.Clear();
                i++;

                if (i >= 20)
                {
                    Console.ReadKey();
                    Console.WriteLine("LIMITE EXCEDIDO, NÃO É POSSIVEL CADASTRAR MAIS!!!");
                    a = false;
                    Console.ReadKey();
                    Console.Clear();

                }

                if (a == true)
                {
                    Console.Write("Aperte [s] para continuar o cadastramento e [n] para finalizar: ");
                    res = char.Parse(Console.ReadLine());
                    Console.Clear();


                    while (res != 'n' && res != 'N' && res != 's' && res != 'S')
                    {
                        Console.WriteLine("***OPÇÃO INVALIDA, DIGITE NOVAMENTE***");
                        Console.Write("Aperte [s] para continuar o cadastramento e [n] para finalizar: ");
                        res = char.Parse(Console.ReadLine());
                        Console.Clear();
                    }
                        
                    if (res == 'n' )
                    {
                        a = false;
                    }
                }

            }

            
          
        }

        static void ValorReceber(CAD_taxi [] taxi, int qtd)
        {
            for (int i = 0; i < qtd; i++)
            {
                taxi[i].ValorReceber = taxi[i].Kper * 1.20;
            }
        }

        static void exibir(CAD_taxi [] taxi, int qtd)
        {
            Console.Clear();
            Console.WriteLine("Relatorio Geral");
            Console.WriteLine();
            Console.SetCursorPosition(0, 3);
            Console.Write("Nome Motorista");
            Console.SetCursorPosition(41, 3);
            Console.Write("N° Taxi");
            Console.SetCursorPosition(57, 3);
            Console.WriteLine("Valor a receber");
            int LIN = 5;
            for (int i = 0; i < qtd; i++)
            {
                Console.SetCursorPosition(0, LIN);
                Console.Write(taxi[i].nome.ToUpper());
                Console.SetCursorPosition(41, LIN);
                Console.Write("{0,4}", taxi[i].NumTaxi);
                Console.SetCursorPosition(57, LIN);
                Console.Write("{0,5:0.00}R$", taxi[i].ValorReceber); LIN++;
            }
            Console.SetCursorPosition(0, LIN);
            Console.WriteLine();
            Console.Write("Tecle algo para exibir maior pessoa a receber... ");
            Console.ReadKey();
        }

        static void exibirMaior(CAD_taxi[] taxi, int qtd)
        {
            string nome = ""; double kper = 0; int Ntaxi = 0; 
            for (int i = 0; i< qtd; i++)
            {
                if (taxi[i].Kper > kper)
                {
                    nome = taxi[i].nome;
                    kper = taxi[i].Kper;
                    Ntaxi = taxi[i].NumTaxi;
                }
            }

            Console.Clear();
            Console.WriteLine("Maior a receber");
            Console.WriteLine();
            Console.SetCursorPosition(0, 3);
            Console.Write("Nome Motorista");
            Console.SetCursorPosition(41, 3);
            Console.Write("N° Taxi");
            Console.SetCursorPosition(57, 3);
            Console.WriteLine("Valor a receber");
            int LIN = 5;
            Console.SetCursorPosition(0, LIN);
            Console.Write(nome.ToUpper());
            Console.SetCursorPosition(41, LIN);
            Console.Write("{0,4}", Ntaxi);
            Console.SetCursorPosition(57, LIN);
            Console.Write("{0,5:0.00}R$", kper); LIN++;
            Console.SetCursorPosition(0, LIN);
            Console.WriteLine();
            Console.Write("Tecle algo para encerrar... ");
            Console.ReadKey();
        }
    }
}
